VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Private Sub Workbook_Open()

    ' Ordnerpfade initialisieren - auch damit Logs geschrieben werden können bei Fehlern
    Dim backupFolderPath As String
    backupFolderPath = ThisWorkbook.Sheets("Einstellungen").Range("B6").Value
    Dim VBAexportFolderPath As String
    VBAexportFolderPath = ThisWorkbook.Sheets("Einstellungen").Range("B8").Value

    ' Prüfen, ob der Backup-Ordner existiert und ob die Aktion aktiviert ist
    If ThisWorkbook.Sheets("Einstellungen").Range("B5").Value = "On" Then
        If Dir(backupFolderPath, vbDirectory) = "" Then
            MsgBox "Einstellungen: Der Ordnerpfad in B6 existiert nicht." & vbCrLf & "- Gültigen Pfad eingeben" & vbCrLf & "oder" & vbCrLf & "- Auto-Backup auf 'Off' stellen.", vbExclamation
            Exit Sub
        End If
    End If

    ' Prüfen, ob der VBA-Export-Ordner existiert und ob die Aktion aktiviert ist
    If ThisWorkbook.Sheets("Einstellungen").Range("B7").Value = "On" Then
        If Dir(VBAexportFolderPath, vbDirectory) = "" Then
            MsgBox "Einstellungen: Der Ordnerpfad in B8 existiert nicht." & vbCrLf & "- Gültigen Pfad eingeben" & vbCrLf & "oder" & vbCrLf & "- VBA-Export auf 'Off' stellen.", vbExclamation
            Exit Sub
        End If
    End If
    
    ' Auto-Backup aktiv?
    If ThisWorkbook.Sheets("Einstellungen").Range("B5").Value = "On" Then

        On Error GoTo ErrorHandler  ' Fehlerbehandlung aktivieren

        Dim backupFilePath As String
        Dim currentDateTime As String

        ' String für aktuelles Datum und Zeit
        currentDateTime = Format(Now, "yyyymmdd_HHMMSS")

        ' Namen der Backup-Datei
        backupFilePath = backupFolderPath & Application.PathSeparator & Left(ThisWorkbook.Name, Len(ThisWorkbook.Name) - 5) & "_" & currentDateTime & ".xlsm"

        ' Speichere Kopie des Workbooks im Backup-Ordner
        ThisWorkbook.SaveCopyAs backupFilePath

        ' Schreibe Zeitstempel des Backups in Zelle A2
        ThisWorkbook.Sheets("Einstellungen").Range("B2").Value = Format(Now, "dd.mm.yyyy HH:mm")

        On Error GoTo 0  ' Fehlerbehandlung deaktivieren - nach erfolgreicher Ausführung

    End If

    Exit Sub

ErrorHandler:
    MsgBox "Ein Fehler ist aufgetreten: " & Err.Description, vbCritical
    On Error GoTo 0  ' Fehlerbehandlung deaktivieren

End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

    ' VBA-Export aktiv?
    If ThisWorkbook.Sheets("Einstellungen").Range("B7").Value = "On" Then
        
        Dim lastExportTime As Date
        Dim currentTime As Date
        Dim VBAexportFolderPath As String
        
        ' Zeit des letzten Exports abrufen
        lastExportTime = ThisWorkbook.Sheets("Einstellungen").Range("B3").Value
        currentTime = Now

        ' Prüfen, ob seit dem letzten Export 5 Minuten vergangen sind
        If DateDiff("n", lastExportTime, currentTime) >= 5 Then
            
            On Error GoTo ErrorHandler  ' Fehlerbehandlung aktivieren

            ' Ordnerpfad initialisieren
            VBAexportFolderPath = ThisWorkbook.Sheets("Einstellungen").Range("B8").Value

            ' Prüfen, ob der Ordnerpfad leer ist
            If VBAexportFolderPath = "" Then
                MsgBox "Einstellungen: Der Ordnerpfad in B8 ist leer." & vbCrLf & "- Gültigen Pfad eingeben" & vbCrLf & "oder" & vbCrLf & "- VBA-Export auf 'Off' stellen.", vbExclamation
                Cancel = True  ' Speichern abbrechen
                Exit Sub
            End If

            ' Export durchführen
            Call ExportVBAComponents(VBAexportFolderPath)
            
            ' Zeitstempel des letzten Exports aktualisieren
            ThisWorkbook.Sheets("Einstellungen").Range("B3").Value = currentTime

            On Error GoTo 0  ' Fehlerbehandlung deaktivieren - nach erfolgreicher Ausführung
        End If
    End If

    Exit Sub

ErrorHandler:
    MsgBox "Ein Fehler ist aufgetreten: " & Err.Description, vbCritical
    On Error GoTo 0  ' Fehlerbehandlung deaktivieren

End Sub

Public Sub ExportVBAComponents(ByVal VBAexportFolderPath As String)

    Dim component As Object
    Dim componentFilePath As String
    Dim fileExtension As String

    ' Durchläuft alle VBA-Komponenten im aktuellen Workbook und exportiert sie
    For Each component In ThisWorkbook.VBProject.VBComponents
        Select Case component.Type
            Case vbext_ct_StdModule: fileExtension = ".bas"
            Case vbext_ct_ClassModule, vbext_ct_Document: fileExtension = ".cls"
            Case vbext_ct_MSForm: fileExtension = ".frm"
            Case Else: fileExtension = ".txt"
        End Select
        componentFilePath = VBAexportFolderPath & Application.PathSeparator & component.Name & fileExtension
        component.Export componentFilePath
    Next

End Sub
